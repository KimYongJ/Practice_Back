spring:
  h2:
    console:
      enabled: false
  jpa:
    hibernate:
      ddl-auto: update # create, update적을 수도 있음
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/practice?serverTimezone=Asia/Seoul
    username: practice
    password: practice
  sql:
    init:
      data-locations: classpath*:db/h2/data.sql
logging:
  level:
    org.springframework.security: DEBUG # 스프링 시큐리티 관련 클래스들에서 발생하는 로그가 디버그 레벨로 출력
    org:
      springframework:
        orm:
          jpa: DEBUG

server:
  servlet:
    encoding:
      force-response: true

token:
  authoritiesKey: 'auth key'
  bearerType: 'bearer'
  accessTokenExpireTime: 14400000  # 4*60*60*1000 60초*60초*4 / 4시간 = 14400000
  secret: 'fUnn+TAcfkzbrBWjpG0HFJdq7uqN/SedBGAZbLxib2td3kDJAQm2mP836NY8GF/WlyjdlZxUsHXEJvZNmxE7pA=='
#        KeyGenerator keyGen = KeyGenerator.getInstance("HmacSHA512");
#        keyGen.init(512); // 키 길이를 512비트로 설정
#        // 키 생성
#        SecretKey secretKey = keyGen.generateKey();
#        // 바이트 배열로 추출
#        byte[] keyBytes = secretKey.getEncoded();
#        // 바이트 배열을 Base64 인코딩하여 문자열로 변환
#        String encodedKey = Base64.getEncoder().encodeToString(keyBytes);
#        // 생성된 키 출력
#        System.out.println("Generated Key (Base64 Encoded): " + encodedKey);